Class {
	#name : 'TetrisEndOfGameView',
	#superclass : 'AbtAppBldrView',
	#instVars : [
		'world'
	],
	#category : 'VATetris'
}

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
TetrisEndOfGameView class >> _PRAGMA_IS_ [

	"%%PRAGMA DECLARE
	(name: IS_TetrisEndOfGameView isPool: true isConstant: false)
	(pool: IS_TetrisEndOfGameView declarations: (
		(name: IS_world isConstant: false)
		(name: IS_instanceInterfaceSpec isConstant: false)
	))"
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
TetrisEndOfGameView class >> abtPrimFlushInterfaceSpecCache [

	IS_TetrisEndOfGameView associationsDo: [: poolDictionaryAssoc | poolDictionaryAssoc value: nil].
	super abtPrimFlushInterfaceSpecCache
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
TetrisEndOfGameView class >> abtUntranslatedConstants [
	"** Do not modify or delete **  See: AbtAppBldrPart class>>#about_abtUntranslatedConstants"

	^#(
	'Game Over'
	'Score:'
	'Level:'
	'0'
	'0'
	'Would you like to play again?'
	'Yes'
	'No'
	)
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
TetrisEndOfGameView class >> IS_instanceInterfaceSpec [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_TetrisEndOfGameView::IS_instanceInterfaceSpec notNil
		ifTrue: [IS_TetrisEndOfGameView::IS_instanceInterfaceSpec]
		ifFalse: [
		IS_TetrisEndOfGameView::IS_instanceInterfaceSpec := AbtInterfaceSpec new
		featureNamed: #world put: self IS_world]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
TetrisEndOfGameView class >> IS_world [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^IS_TetrisEndOfGameView::IS_world notNil
		ifTrue: [IS_TetrisEndOfGameView::IS_world]
		ifFalse: [
		IS_TetrisEndOfGameView::IS_world := (AbtAttributeSpec new
		 attributeType: TetrisWorld;
		 setSelector: #world:;
		 getSelector: #world;
		 changeSymbol: #world)]
]

{ #category : 'IS_generated',
  #vaVisibility : 'private' }
TetrisEndOfGameView >> abtBuildInternals [
	"** Do not modify or delete **  See: AbtAppBldrPart class>>#about_abtBuildInternals"

	| gui window gameOverLabel scoreLabel levelLabel scoreField levelField label1 pushButton1
	 pushButton2 tetrisWorld conn0 conn1 conn2 conn3 conn4 |
	gui := self class abtSeparatedConstants.
	window := AbtShellView abtCreatePart: 'Window' parent: nil owner: self .
	gameOverLabel := AbtLabelView abtCreatePart: 'gameOverLabel' parent: window.
	scoreLabel := AbtLabelView abtCreatePart: 'scoreLabel' parent: window.
	levelLabel := AbtLabelView abtCreatePart: 'levelLabel' parent: window.
	scoreField := AbtLabelView abtCreatePart: 'scoreField' parent: window.
	levelField := AbtLabelView abtCreatePart: 'levelField' parent: window.
	label1 := AbtLabelView abtCreatePart: 'Label1' parent: window.
	pushButton1 := AbtPushButtonView abtCreatePart: 'Push Button1' parent: window.
	pushButton2 := AbtPushButtonView abtCreatePart: 'Push Button2' parent: window.
	(tetrisWorld := AbtVariable abtCreatePart: 'tetrisWorld' parent: self parentVisual owner: self ) partClass: TetrisWorld.
	self 
		 primaryPart: window.
	window 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtEdgeConstant new offset: 87);
			rightEdge: (AbtEdgeConstant new offset: 321);
			topEdge: (AbtEdgeConstant new offset: 60);
			bottomEdge: (AbtEdgeConstant new offset: 229)).
	gameOverLabel 
		 object: (gui at: 1)          " 'Game Over' " ;
		 fontName: '-*-comic sans ms-bold-i-*-script-*-160-*-*-*-*-*-*';
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 10);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 10);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 30);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	scoreLabel 
		 object: (gui at: 2)          " 'Score:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 10);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHWIDGET; offset: 20; attachedTargetView: gameOverLabel);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	levelLabel 
		 object: (gui at: 3)          " 'Level:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHOPPOSITEWIDGET; offset: 0; attachedTargetView: scoreLabel);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHWIDGET; offset: 10; attachedTargetView: scoreLabel);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	scoreField 
		 object: (gui at: 4)          " '0' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHWIDGET; offset: 5; attachedTargetView: scoreLabel);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHOPPOSITEWIDGET; offset: 0; attachedTargetView: scoreLabel);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	levelField 
		 object: (gui at: 5)          " '0' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHWIDGET; offset: 5; attachedTargetView: levelLabel);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHOPPOSITEWIDGET; offset: 0; attachedTargetView: levelLabel);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label1 
		 object: (gui at: 6)          " 'Would you like to play again?' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 10);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 10);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHWIDGET; offset: 20; attachedTargetView: levelLabel);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton1 
		 object: (gui at: 7)          " 'Yes' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHOPPOSITEWIDGET; offset: 70; attachedTargetView: label1);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 45);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHWIDGET; offset: 10; attachedTargetView: label1);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton2 
		 object: (gui at: 8)          " 'No' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 45);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHOPPOSITEWIDGET; offset: 70; attachedTargetView: label1);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHOPPOSITEWIDGET; offset: 0; attachedTargetView: pushButton1);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	self attributeConnections add: (conn0 := AbtAttributeToAttributeConnection new
		connectSource: self
		featureName: #world
		feature: TetrisEndOfGameView IS_world
		toTarget: tetrisWorld
		variableFeatureName: #self
		featureSelector: #IS_self).
	self attributeConnections add: (conn1 := AbtAttributeToAttributeConnection new
		connectSource: tetrisWorld
		variableFeatureName: #level
		featureSelector: #IS_level
		toTarget: levelField
		featureName: #object
		feature: AbtLabelView IS_object).
	self attributeConnections add: (conn2 := AbtAttributeToAttributeConnection new
		connectSource: tetrisWorld
		variableFeatureName: #score
		featureSelector: #IS_score
		toTarget: scoreField
		featureName: #object
		feature: AbtLabelView IS_object).
	pushButton2
		abtWhenPrimitive: #clicked
		perform: 
			(conn3 := AbtEventToActionConnection new
				source: pushButton2;
				eventName: #clicked;
				actionProvider: self
				variableFeatureName: #closeWidget
				featureSelector: #IS_closeWidget).
	pushButton1
		abtWhenPrimitive: #clicked
		perform: 
			(DirectedMessage new 
				receiver: self;
				selector: #playAgain;
				arguments: #()).
	self initializeAttributeConnections.
	self finalInitialize.

]

{ #category : 'Actions',
  #vaVisibility : 'private' }
TetrisEndOfGameView >> playAgain [

	self world resetGame.

	self closeWidget.
]

{ #category : 'Accessors' }
TetrisEndOfGameView >> world [
	"Return the value of world."

	^world
]

{ #category : 'Accessors' }
TetrisEndOfGameView >> world: aTetrisWorld [
	"Save the value of world."

	world := aTetrisWorld.
	self signalEvent: #world
		 with: aTetrisWorld.
]
